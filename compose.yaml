services:
  master:
    container_name: ${CLUSTER_NAME}_master
    image: rancher/k3s:${K3S_VERSION:-latest}
    hostname: ${CLUSTER_NAME}-master-1
    restart: always
    privileged: true
    tmpfs:
      - /run
      - /var/run
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-network
      # Ingress controller port 80
      - traefik.http.routers.${CLUSTER_NAME}-ingress-controller-https.tls=true
      - traefik.http.routers.${CLUSTER_NAME}-ingress-controller-https.entrypoints=websecure
      - traefik.http.routers.${CLUSTER_NAME}-ingress-controller-https.rule=HostRegexp(`[a-z-_0-9]+.${CLUSTER_DOMAIN}`)
#      - traefik.http.routers.${CLUSTER_NAME}-ingress-controller-https.service=${CLUSTER_NAME}-ingress-controller-loadbalancer
      - traefik.http.services.${CLUSTER_NAME}-ingress-controller-loadbalancer.loadbalancer.server.port=80
      # Kubernetes API Server port 6443
#      - traefik.http.routers.${CLUSTER_NAME}-api-server-https.tls=true
#      - traefik.http.routers.${CLUSTER_NAME}-api-server-https.entrypoints=websecure
#      - traefik.http.routers.${CLUSTER_NAME}-api-server-https.rule=Host(`${CLUSTER_API_SERVER}`)
#      - traefik.http.routers.${CLUSTER_NAME}-api-server-https.service=${CLUSTER_NAME}-api-server-loadbalancer
#      - traefik.http.services.${CLUSTER_NAME}-api-server-loadbalancer.loadbalancer.server.port=6443
#      - traefik.http.services.${CLUSTER_NAME}-api-server-loadbalancer.loadbalancer.server.scheme=https
    command:
      - server
    environment:
      - K3S_TOKEN=${K3S_CLUSTER_SECRET:?err}
      - K3S_KUBECONFIG_OUTPUT=/output/kubeconfig.yaml
      - K3S_KUBECONFIG_MODE=644
    volumes:
      - k3s-master:/var/lib/rancher/k3s
      - ./.manifests/config/traefik.yaml:/var/lib/rancher/k3s/server/manifests/traefik-config.yaml
      - ./.manifests/tools:/var/manifests
    ports:
      - "6443:6443" # Kubernetes API Server
#      - "80:80"     # Ingress controller port 80
#      - "443:443"   # Ingress controller port 443
    networks:
      - traefik-network
      - internal
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  worker:
    container_name: ${CLUSTER_NAME}_worker
    hostname: ${CLUSTER_NAME}-worker-1
    image: rancher/k3s:${K3S_VERSION:-latest}
    restart: always
    command:
      - agent
    privileged: true
    tmpfs:
      - /run
      - /var/run
    labels:
      - traefik.enable=false
    links:
      - master
    environment:
      - K3S_URL=https://master:6443
      - K3S_TOKEN=${K3S_CLUSTER_SECRET:?err}
    volumes:
      - k3s-worker:/etc/rancher/node
    networks:
      - internal
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  k8s:
    container_name: ${PROJECT_NAME}_k8s
    restart: always
    network_mode: host
    depends_on:
      - master
    build:
      context: .
      args:
        USER: ${NON_ROOT_USER:-devops}
        WORKING_DIR: ${WORKING_DIR:-/var/src}
    volumes:
      - ./.kubeconfig:/home/${NON_ROOT_USER:-devops}/.kube
      - ./.manifests/tools:${WORKING_DIR}

volumes:
  k3s-master:
  k3s-worker:

networks:
  internal:
  traefik-network:
    external: true
